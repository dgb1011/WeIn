"use strict";(()=>{var e={};e.id=400,e.ids=[400],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9348:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},412:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},7945:(e,s,r)=>{r.r(s),r.d(s,{patchFetch:()=>f,routeModule:()=>c,serverHooks:()=>x,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>l});var t={};r.r(t),r.d(t,{POST:()=>p});var n=r(2412),o=r(4293),i=r(4147),a=r(7856),u=r(2391);async function p(e){try{let{sessionId:s}=await e.json();if(!s)return a.NextResponse.json({error:"Session ID is required"},{status:400});return await u.BF.sendSessionNotifications(s),a.NextResponse.json({success:!0,message:"Session notifications scheduled successfully"})}catch(e){return console.error("Error sending session notifications:",e),a.NextResponse.json({error:"Failed to send session notifications"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/notifications/session/route",pathname:"/api/notifications/session",filename:"route",bundlePath:"app/api/notifications/session/route"},resolvedPagePath:"/Users/dgb_1011/Desktop/WeIn/WeIn/wein/src/app/api/notifications/session/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:d,workUnitAsyncStorage:l,serverHooks:x}=c;function f(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:l})}}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[267,814,991],()=>r(7945));module.exports=t})();