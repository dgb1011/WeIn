"use strict";(()=>{var e={};e.id=1996,e.ids=[1996],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9348:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},412:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},398:(e,t,r)=>{r.r(t),r.d(t,{patchFetch:()=>j,routeModule:()=>l,serverHooks:()=>R,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>x});var s={};r.r(s),r.d(s,{GET:()=>c,POST:()=>p,PUT:()=>d});var n=r(2412),o=r(4293),i=r(4147),a=r(7856),u=r(2391);async function c(e){try{let{searchParams:t}=new URL(e.url),r=t.get("userId"),s=parseInt(t.get("limit")||"50"),n=parseInt(t.get("offset")||"0");if(!r)return a.NextResponse.json({error:"User ID is required"},{status:400});let o=await u.BF.getUserNotifications(r,s,n),i=await u.BF.getUnreadNotificationCount(r);return a.NextResponse.json({notifications:o,unreadCount:i,pagination:{limit:s,offset:n,hasMore:o.length===s}})}catch(e){return console.error("Error fetching notifications:",e),a.NextResponse.json({error:"Failed to fetch notifications"},{status:500})}}async function p(e){try{let{userId:t,type:r,title:s,message:n,data:o,priority:i}=await e.json();if(!t||!r||!s||!n)return a.NextResponse.json({error:"Missing required fields: userId, type, title, message"},{status:400});if(!Object.values(u.k$).includes(r))return a.NextResponse.json({error:"Invalid notification type"},{status:400});if(i&&!Object.values(u.RX).includes(i))return a.NextResponse.json({error:"Invalid notification priority"},{status:400});return await u.BF.sendNotification({userId:t,type:r,title:s,message:n,data:o,priority:i||u.RX.NORMAL}),a.NextResponse.json({success:!0})}catch(e){return console.error("Error sending notification:",e),a.NextResponse.json({error:"Failed to send notification"},{status:500})}}async function d(e){try{let{action:t,notificationId:r,userId:s}=await e.json();if(!t)return a.NextResponse.json({error:"Action is required"},{status:400});switch(t){case"mark_read":if(!r)return a.NextResponse.json({error:"Notification ID is required for mark_read action"},{status:400});await u.BF.markNotificationAsRead(r);break;case"mark_all_read":if(!s)return a.NextResponse.json({error:"User ID is required for mark_all_read action"},{status:400});await u.BF.markAllNotificationsAsRead(s);break;default:return a.NextResponse.json({error:"Invalid action"},{status:400})}return a.NextResponse.json({success:!0})}catch(e){return console.error("Error updating notifications:",e),a.NextResponse.json({error:"Failed to update notifications"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/notifications/route",pathname:"/api/notifications",filename:"route",bundlePath:"app/api/notifications/route"},resolvedPagePath:"/Users/dgb_1011/Desktop/WeIn/WeIn/wein/src/app/api/notifications/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:x,serverHooks:R}=l;function j(){return(0,i.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:x})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[3267,8814,8991],()=>r(398));module.exports=s})();