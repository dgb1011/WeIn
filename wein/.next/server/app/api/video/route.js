(()=>{var e={};e.id=700,e.ids=[700],e.modules={3524:e=>{"use strict";e.exports=require("@prisma/client")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},8893:e=>{"use strict";e.exports=require("buffer")},4770:e=>{"use strict";e.exports=require("crypto")},6162:e=>{"use strict";e.exports=require("stream")},1764:e=>{"use strict";e.exports=require("util")},2112:(e,t,i)=>{"use strict";i.r(t),i.d(t,{patchFetch:()=>v,routeModule:()=>h,serverHooks:()=>y,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>g});var r={};i.r(r),i.d(r,{GET:()=>p,POST:()=>u});var a=i(2412),s=i(4293),o=i(4147),n=i(7856),c=i(4871);class d{static{this.peerConnections=new Map}static{this.mediaStreams=new Map}static{this.recordingSessions=new Map}static{this.analyticsData=new Map}static{this.rtcConfiguration={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"stun:stun1.l.google.com:19302"},{urls:"stun:stun2.l.google.com:19302"}],iceCandidatePoolSize:10}}static{this.qualityPresets={"480p":{video:"480p",audio:"medium",bandwidth:"low",frameRate:24,bitrate:5e5},"720p":{video:"720p",audio:"high",bandwidth:"medium",frameRate:30,bitrate:15e5},"1080p":{video:"1080p",audio:"high",bandwidth:"high",frameRate:30,bitrate:3e6}}}static async createVideoRoom(e,t={}){try{let{recordingEnabled:i=!0,maxParticipants:r=2,quality:a="720p"}=t,s=`room_${e}_${Date.now()}`;return{id:(await c.db.videoSession.create({data:{consultationSessionId:e,roomId:s,recordingEnabled:i,videoQuality:a,sessionMetadata:{maxParticipants:r,qualitySettings:this.qualityPresets[a],createdAt:new Date}}})).id,sessionId:e,roomId:s,joinUrl:`/video/session/${e}`,guestUrl:`/video/join/${s}`,recordingEnabled:i,startTime:new Date,maxParticipants:r,currentParticipants:0,status:"active"}}catch(e){throw console.error("Error creating video room:",e),Error("Failed to create video room")}}static async joinVideoRoom(e,t,i){try{let r=await c.db.videoSession.findFirst({where:{roomId:e}});if(!r)throw Error("Video room not found");let a=new RTCPeerConnection(this.rtcConfiguration),s=await navigator.mediaDevices.getUserMedia({video:{width:{ideal:1280},height:{ideal:720},frameRate:{ideal:30}},audio:{echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0}});s.getTracks().forEach(e=>{a.addTrack(e,s)}),a.onicecandidate=t=>{this.handleIceCandidate(e,t)},a.ontrack=t=>{this.handleRemoteTrack(e,t)},a.onconnectionstatechange=()=>{this.handleConnectionStateChange(e,a.connectionState)},this.peerConnections.set(e,a),this.mediaStreams.set(e,s);let o=await c.db.videoParticipant.create({data:{videoSessionId:r.id,userId:t,userType:i,joinTime:new Date,isActive:!0}}),n={id:r.id,roomId:e,sessionId:r.consultationSessionId,localStream:s,peerConnection:a,participants:new Map,startTime:new Date,qualitySettings:this.qualityPresets["720p"],connectionStatus:"connecting"};return n.participants.set(t,{id:o.id,userId:t,userType:i,joinTime:new Date,totalDuration:0,audioQuality:0,videoQuality:0,screenShareDuration:0,chatMessagesCount:0,connectionInterruptions:0,isActive:!0}),r.recordingEnabled&&await this.startRecording(e),this.startAnalyticsTracking(e),n}catch(e){throw console.error("Error joining video room:",e),Error("Failed to join video room")}}static async leaveVideoRoom(e,t){try{await c.db.videoParticipant.updateMany({where:{videoSessionId:{in:Array.from(this.peerConnections.keys())},userId:t},data:{leaveTime:new Date,isActive:!1}});let i=this.mediaStreams.get(e);i&&(i.getTracks().forEach(e=>e.stop()),this.mediaStreams.delete(e));let r=this.peerConnections.get(e);r&&(r.close(),this.peerConnections.delete(e)),await this.stopRecording(e),await this.finalizeAnalytics(e)}catch(e){throw console.error("Error leaving video room:",e),Error("Failed to leave video room")}}static async startRecording(e){try{let t=this.mediaStreams.get(e);if(!t)throw Error("No local stream available for recording");let i=new MediaRecorder(t,{mimeType:"video/webm;codecs=vp8,opus"}),r={id:`rec_${e}_${Date.now()}`,mediaRecorder:i,startTime:new Date,status:"recording",chunks:[]};return i.ondataavailable=e=>{e.data.size>0&&r.chunks.push(e.data)},i.onstop=async()=>{await this.processRecording(r)},i.start(1e3),this.recordingSessions.set(e,r),r}catch(e){throw console.error("Error starting recording:",e),Error("Failed to start recording")}}static async stopRecording(e){try{let t=this.recordingSessions.get(e);t&&t.mediaRecorder&&(t.mediaRecorder.stop(),t.status="stopped",t.endTime=new Date)}catch(e){throw console.error("Error stopping recording:",e),Error("Failed to stop recording")}}static async processRecording(e){try{let t=new Blob(e.chunks,{type:"video/webm"});e.fileSize=t.size,e.duration=e.endTime?(e.endTime.getTime()-e.startTime.getTime())/1e3:0,e.recordingUrl=`/recordings/${e.id}.webm`,e.status="processing",await c.db.videoSession.updateMany({where:{roomId:e.id.split("_")[1]},data:{recordingUrl:e.recordingUrl,recordingDurationSeconds:e.duration}})}catch(t){console.error("Error processing recording:",t),e.status="stopped"}}static startAnalyticsTracking(e){setInterval(async()=>{try{let t=this.peerConnections.get(e);if(t){let i=await t.getStats();this.updateQualityMetrics(e,i)}}catch(e){console.error("Error updating quality metrics:",e)}},5e3),this.analyticsData.set(e,{sessionId:e,overallQualityScore:0,videoQuality:{averageResolution:"720p",connectionStability:0,bufferingEvents:0,frameDrops:0,packetLoss:0,latency:0},engagement:{actualDuration:0,scheduledDuration:0,participantActivity:[],screenShareUsage:0,chatActivity:0},technicalIssues:[],recommendations:[],timestamp:new Date})}static updateQualityMetrics(e,t){let i=this.analyticsData.get(e);if(!i)return;let r=0,a=0,s=0;t.forEach(e=>{("inbound-rtp"===e.type||"outbound-rtp"===e.type)&&(void 0!==e.packetsLost&&(r+=e.packetsLost),void 0!==e.jitter&&(a+=1e3*e.jitter,s++))}),i.videoQuality.packetLoss=r,i.videoQuality.latency=s>0?a/s:0,i.overallQualityScore=this.calculateQualityScore(i)}static calculateQualityScore(e){return Math.max(0,Math.min(100,100-2*e.videoQuality.packetLoss-e.videoQuality.latency/10-5*e.videoQuality.bufferingEvents-3*e.videoQuality.frameDrops))}static async finalizeAnalytics(e){try{let t=this.analyticsData.get(e);if(!t)return;t.engagement.actualDuration=(new Date().getTime()-t.timestamp.getTime())/1e3,t.recommendations=this.generateRecommendations(t),await c.db.systemHealthMetrics.create({data:{metricType:"video_session_analytics",metricValue:t.overallQualityScore,metricUnit:"score",additionalData:t}}),this.analyticsData.delete(e)}catch(e){console.error("Error finalizing analytics:",e)}}static generateRecommendations(e){let t=[];return e.videoQuality.packetLoss>10&&t.push("Consider improving network connection to reduce packet loss"),e.videoQuality.latency>100&&t.push("High latency detected - check network quality"),e.videoQuality.bufferingEvents>5&&t.push("Multiple buffering events - consider reducing video quality"),e.overallQualityScore<70&&t.push("Overall session quality is below optimal - review technical setup"),t}static handleIceCandidate(e,t){t.candidate&&console.log("ICE candidate generated:",t.candidate)}static handleRemoteTrack(e,t){console.log("Remote track received:",t.track.kind)}static handleConnectionStateChange(e,t){console.log(`Connection state changed for room ${e}:`,t);let i=this.analyticsData.get(e);i&&("failed"===t||"disconnected"===t)&&i.technicalIssues.push({type:"connection_lost",severity:"high",timestamp:new Date,description:`Connection ${t}`,resolved:!1})}static async getVideoSession(e){try{let t=await c.db.videoSession.findFirst({where:{consultationSessionId:e},include:{videoParticipants:!0}});if(!t)return null;return{id:t.id,sessionId:t.consultationSessionId,roomId:t.roomId,joinUrl:`/video/session/${e}`,guestUrl:`/video/join/${t.roomId}`,recordingEnabled:t.recordingEnabled,startTime:t.createdAt,endTime:t.recordingDurationSeconds?new Date(t.createdAt.getTime()+1e3*t.recordingDurationSeconds):void 0,maxParticipants:2,currentParticipants:t.videoParticipants.length,status:t.recordingDurationSeconds?"ended":"active"}}catch(e){return console.error("Error fetching video session:",e),null}}static async getSessionAnalytics(e){try{let t=await c.db.systemHealthMetrics.findFirst({where:{metricType:"video_session_analytics",additionalData:{path:["sessionId"],equals:e}},orderBy:{timestamp:"desc"}});return t?.additionalData||null}catch(e){return console.error("Error fetching session analytics:",e),null}}}var l=i(8772);async function u(e){try{let t=await (0,l.ts)(e);if(!t)return n.NextResponse.json({error:"Unauthorized"},{status:401});let{action:i,...r}=await e.json();if("createRoom"===i){let{sessionId:e,recordingEnabled:t=!0,maxParticipants:i=2,quality:a="720p"}=r,s=await d.createVideoRoom(e,{recordingEnabled:t,maxParticipants:i,quality:a});return n.NextResponse.json({room:s})}if("joinRoom"===i){let{roomId:e}=r,i=await d.joinVideoRoom(e,t.id,t.userType.toLowerCase());return n.NextResponse.json({session:i,roomId:e})}if("leaveRoom"===i){let{roomId:e}=r;return await d.leaveVideoRoom(e,t.id),n.NextResponse.json({message:"Successfully left video room"})}return n.NextResponse.json({error:"Invalid action"},{status:400})}catch(e){return console.error("Video API Error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{if(!await (0,l.ts)(e))return n.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:t}=new URL(e.url),i=t.get("action");if("session"===i){let e=t.get("sessionId");if(!e)return n.NextResponse.json({error:"Session ID required"},{status:400});let i=await d.getVideoSession(e);return n.NextResponse.json({session:i})}if("analytics"===i){let e=t.get("sessionId");if(!e)return n.NextResponse.json({error:"Session ID required"},{status:400});let i=await d.getSessionAnalytics(e);return n.NextResponse.json({analytics:i})}return n.NextResponse.json({error:"Invalid action"},{status:400})}catch(e){return console.error("Video API Error:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let h=new a.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/video/route",pathname:"/api/video",filename:"route",bundlePath:"app/api/video/route"},resolvedPagePath:"/Users/dgb_1011/Desktop/WeIn/WeIn/wein/src/app/api/video/route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:m,workUnitAsyncStorage:g,serverHooks:y}=h;function v(){return(0,o.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:g})}},5303:()=>{},8772:(e,t,i)=>{"use strict";i.d(t,{ts:()=>n});var r=i(3449),a=i.n(r),s=i(4871);let o=process.env.JWT_SECRET||"your-secret-key";async function n(e){try{let t=e.headers.get("authorization")?.replace("Bearer ","");if(!t)return null;let i=function(e){try{return a().verify(e,o)}catch(e){return null}}(t);if(!i)return null;return await s.db.user.findUnique({where:{id:i.userId},select:{id:!0,email:!0,firstName:!0,lastName:!0,userType:!0,status:!0}})}catch(e){return console.error("Auth middleware error:",e),null}}},4871:(e,t,i)=>{"use strict";i.d(t,{db:()=>a});var r=i(3524);let a=globalThis.prisma??new r.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var i=e=>t(t.s=e),r=t.X(0,[267,814,449],()=>i(2112));module.exports=r})();