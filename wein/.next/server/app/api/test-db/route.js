(()=>{var e={};e.id=735,e.ids=[735],e.modules={3524:e=>{"use strict";e.exports=require("@prisma/client")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},2257:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>d,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{GET:()=>p});var a=r(2412),n=r(4293),o=r(4147),i=r(7856),u=r(4871);async function p(){try{let e=await u.db.$queryRaw`SELECT 1 as test`;return i.NextResponse.json({message:"Database connection successful",result:e,timestamp:new Date().toISOString()})}catch(e){return console.error("Database test error:",e),i.NextResponse.json({error:"Database connection failed",details:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString()},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/test-db/route",pathname:"/api/test-db",filename:"route",bundlePath:"app/api/test-db/route"},resolvedPagePath:"/Users/dgb_1011/Desktop/WeIn/WeIn/wein/src/app/api/test-db/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:m}=d;function x(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},5303:()=>{},4871:(e,t,r)=>{"use strict";r.d(t,{db:()=>a});var s=r(3524);let a=globalThis.prisma??new s.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[267,814],()=>r(2257));module.exports=s})();