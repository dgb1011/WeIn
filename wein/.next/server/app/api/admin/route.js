(()=>{var e={};e.id=90,e.ids=[90],e.modules={3524:e=>{"use strict";e.exports=require("@prisma/client")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9348:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},412:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},8893:e=>{"use strict";e.exports=require("buffer")},4770:e=>{"use strict";e.exports=require("crypto")},6162:e=>{"use strict";e.exports=require("stream")},1764:e=>{"use strict";e.exports=require("util")},6736:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>g,serverHooks:()=>f,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{DELETE:()=>m,GET:()=>d,POST:()=>p,PUT:()=>y});var a=r(2412),n=r(4293),o=r(4147),i=r(7856),u=r(4871);class l{static async getAllUsers(e={}){try{let{userType:t,status:r,limit:s=20,offset:a=0,search:n}=e,o={};t&&t.length>0&&(o.userType={in:t}),r&&r.length>0&&(o.status={in:r}),n&&(o.OR=[{email:{contains:n,mode:"insensitive"}},{firstName:{contains:n,mode:"insensitive"}},{lastName:{contains:n,mode:"insensitive"}}]);let i=await u.db.user.findMany({where:o,select:{id:!0,email:!0,firstName:!0,lastName:!0,userType:!0,status:!0,createdAt:!0},orderBy:{createdAt:"desc"},take:s,skip:a}),l=await u.db.user.count({where:o});return{users:i.map(e=>({...e,totalSessions:0,totalHours:0})),total:l,hasMore:a+s<l}}catch(e){throw console.error("Error fetching users:",e),Error("Failed to fetch users")}}static async updateUserStatus(e,t,r){try{await u.db.user.update({where:{id:e},data:{status:t,updatedAt:new Date}}),console.log(`User ${e} status updated to ${t}. Reason: ${r||"No reason provided"}`)}catch(e){throw console.error("Error updating user status:",e),Error("Failed to update user status")}}static async deleteUser(e){try{await u.db.user.delete({where:{id:e}})}catch(e){throw console.error("Error deleting user:",e),Error("Failed to delete user")}}static async getSystemHealth(){try{await u.db.user.count();let e=await u.db.user.count({where:{status:"ACTIVE"}});return{status:"HEALTHY",uptime:99.9,activeUsers:e,lastUpdated:new Date}}catch(e){throw console.error("Error getting system health:",e),Error("Failed to get system health")}}static async getSystemAnalytics(e){try{let e=await u.db.user.count(),t=await u.db.user.count({where:{status:"ACTIVE"}}),r=[{date:new Date().toISOString().split("T")[0],newUsers:0,activeUsers:t,totalUsers:e}];return{totalUsers:e,activeUsers:t,userGrowth:r}}catch(e){throw console.error("Error getting system analytics:",e),Error("Failed to get system analytics")}}static async getSystemConfiguration(){return{maintenanceMode:!1,registrationEnabled:!0,maxSessionsPerDay:10,defaultSessionDuration:60,autoApprovalEnabled:!0}}static async updateSystemConfiguration(e){let t={...await this.getSystemConfiguration(),...e};return console.log("System configuration updated:",t),t}}var c=r(8772);async function d(e){try{let t=await (0,c.ts)(e);if(!t||"ADMIN"!==t.userType)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:r}=new URL(e.url),s=r.get("action");if("users"===s){let e=r.get("userType")?.split(","),t=r.get("status")?.split(","),s=parseInt(r.get("limit")||"20"),a=parseInt(r.get("offset")||"0"),n=r.get("search")||void 0,o=await l.getAllUsers({userType:e,status:t,limit:s,offset:a,search:n});return i.NextResponse.json(o)}if("systemHealth"===s){let e=await l.getSystemHealth();return i.NextResponse.json({health:e})}if("analytics"===s){let e=r.get("startDate"),t=r.get("endDate"),s=e&&t?{start:new Date(e),end:new Date(t)}:void 0,a=await l.getSystemAnalytics(s);return i.NextResponse.json({analytics:a})}if("configuration"===s){let e=await l.getSystemConfiguration();return i.NextResponse.json({config:e})}return i.NextResponse.json({error:"Invalid action"},{status:400})}catch(e){return console.error("Admin API Error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{let t=await (0,c.ts)(e);if(!t||"ADMIN"!==t.userType)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{action:r,...s}=await e.json();if("createAlert"===r)return i.NextResponse.json({alert:{id:"mock-alert-id",type:"INFO",message:"Mock alert created",severity:"LOW",timestamp:new Date,resolved:!1}});return i.NextResponse.json({error:"Invalid action"},{status:400})}catch(e){return console.error("Admin API Error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function y(e){try{let t=await (0,c.ts)(e);if(!t||"ADMIN"!==t.userType)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{action:r,...s}=await e.json();if("updateUserStatus"===r){let{userId:e,status:t,reason:r}=s;return await l.updateUserStatus(e,t,r),i.NextResponse.json({message:"User status updated successfully"})}if("updateConfiguration"===r){let e=await l.updateSystemConfiguration(s);return i.NextResponse.json({config:e})}if("resolveAlert"===r)return i.NextResponse.json({message:"Alert resolved successfully"});return i.NextResponse.json({error:"Invalid action"},{status:400})}catch(e){return console.error("Admin API Error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function m(e){try{let t=await (0,c.ts)(e);if(!t||"ADMIN"!==t.userType)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:r}=new URL(e.url),s=r.get("userId");if(s)return await l.deleteUser(s),i.NextResponse.json({message:"User deleted successfully"});return i.NextResponse.json({error:"User ID required"},{status:400})}catch(e){return console.error("Admin API Error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let g=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/admin/route",pathname:"/api/admin",filename:"route",bundlePath:"app/api/admin/route"},resolvedPagePath:"/Users/dgb_1011/Desktop/WeIn/WeIn/wein/src/app/api/admin/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:h,serverHooks:f}=g;function x(){return(0,o.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:h})}},5303:()=>{},8772:(e,t,r)=>{"use strict";r.d(t,{ts:()=>i});var s=r(3449),a=r.n(s),n=r(4871);let o=process.env.JWT_SECRET||"your-secret-key";async function i(e){try{let t=e.headers.get("authorization")?.replace("Bearer ","");if(!t)return null;let r=function(e){try{return a().verify(e,o)}catch(e){return null}}(t);if(!r)return null;return await n.db.user.findUnique({where:{id:r.userId},select:{id:!0,email:!0,firstName:!0,lastName:!0,userType:!0,status:!0}})}catch(e){return console.error("Auth middleware error:",e),null}}},4871:(e,t,r)=>{"use strict";r.d(t,{db:()=>a});var s=r(3524);let a=globalThis.prisma??new s.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[267,814,449],()=>r(6736));module.exports=s})();